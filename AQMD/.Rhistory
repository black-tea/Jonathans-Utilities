'Und. or Prop. Scenic Major Highway - Class II'
)
)
bss <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by('NAME')
print(bss)
# load libraries
library(sf)
library(dplyr)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp")
bss <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME)
print(bss)
bss <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) %>%
as_tibble()
#print(bss)
# load libraries
library(sf)
library(dplyr)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp")
bss <- bss %>%
st_intersects()
bss
# load libraries
library(sf)
library(dplyr)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp")
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) %>%
st_join()
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) %>%
st_touches()
plot(corridors)
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) %>%
st_touches()
plot(st_geometry(corridors))
# load libraries
library(sf)
library(dplyr)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp")
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) %>%
st_touches()
plot(st_geometry(corridors))
View(corridors)
bss_filtered <- bss %>%
filter(FID %in% c(13460, 15512, 31502, 65716, 68201))
plot(st_geometry(bss_filtered))
bss_filtered <- bss %>%
filter(FID %in% c(589,1169,3313,4558))
plot(st_geometry(bss_filtered))
bss_filtered <- bss %>%
filter(FID %in% c(6600,7250))
plot(st_geometry(bss_filtered))
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
#group_by(NAME) %>%
#st_touches()
plot(st_geometry(corridors))
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) #%>%
#group_by(NAME) %>%
#st_touches()
plot(st_geometry(corridors))
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) #%>%
group_by(NAME) %>%
st_touches()
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) %>%
st_touches()
plot(st_geometry(corridors))
View(corridors)
corridors2 <- corridors[[1]]
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) #%>%
#st_touches()
#corridors2 <- corridors[[1]]
#plot(st_geometry(corridors))
View(corridors)
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) %>%
st_touches() %>%
st_union()
'Divided Major Highway - Class II',
# load libraries
library(sf)
library(dplyr)
library(leaflet)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp")
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) %>%
st_touches() #%>%
#st_union()
#corridors2 <- corridors[[1]]
#plot(st_geometry(corridors))
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) %>%
#st_touches() #%>%
st_union()
#corridors2 <- corridors[[1]]
#plot(st_geometry(corridors))
corridors <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
group_by(NAME) %>%
#st_touches() #%>%
st_union()
#corridors2 <- corridors[[1]]
plot(st_geometry(corridors))
# load libraries
library(sf)
library(dplyr)
library(leaflet)
library(units)
# import street data
bss <- st_read("Data/Street_Pavement_Condition.shp")
bss_filtered <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
# Group & Merge by
group_by(NAME) %>%
summarize() %>%
# Cast sfc_geometry mix to sfc_multilinestring
st_cast() %>%
# Select only those with a length > 1/4 mi (402.336m)
filter(st_length(.) > set_units(402.336, m))
# need to add st_line_merge to aggregate blocks up into segments
leaflet() %>%
addTiles() %>%
addPolylines(data=bss_filtered)
bss_merge <- st_line_merge(bss_filtered)
leaflet() %>%
addTiles() %>%
addPolylines(data=bss_merge)
bss_filtered <- bss %>%
select(
SECT_ID,
STREET_DES,
NAME,
FROM_,
TO_,
ZLENGTH) %>%
filter(STREET_DES %in% c(
'Divided Major Highway - Class II',
'Major Highway - Class I',
'Major Highway - Class II',
'Major Highway - Class II',
'Modified Major Highway',
'Scenic Major Highway - Class I',
'Scenic Major Highway - Class II',
'Und. or Prop. Major Hwy - Class II',
'Und. or Prop. Scenic Major Highway - Class II')) %>%
# Group & Merge by
group_by(NAME) %>%
summarize() %>%
# Cast sfc_geometry mix to sfc_multilinestring
st_cast() %>%
# Select only those with a length > 1/4 mi (402.336m)
filter(st_length(.) > set_units(402.336, m))
# need to add st_line_merge to aggregate blocks up into segments
bss_merge <- st_line_merge(bss_filtered)
leaflet() %>%
addTiles() %>%
addPolylines(data=bss_merge)
st_write(bss_merge, 'bss_major.shp')
getwd()
shiny::runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
library(DT)
sessionInfo()
install.packages('DT')
install.packages("DT")
sessionInfo
sessionInfo()
sessionInfo()
library(DT)
sessionInfo()
devtools::session_info()
library(devtools)
install.packages('devtools')
library(devtools)
devtools::session_info()
devtools::install_github('rstudio/DT')
devtools::install_github('rstudio/DT')
devtools::install_github('rstudio/DT')
devtools::session_info()
shiny::runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
View(tps_runs)
View(lafd_paths_tbl)
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
devtools::loaded_packages()
devtools::install_github("dgrtwo/fuzzyjoin")
library(purr)
library(purrr)
library(purrr)
install.packages('purrr')
install.packages("purrr")
devtools::install_github('dgrtwo/fuzzyjoin')
install.packages('tidyr')
devtools::install_github('dgrtwo/fuzzyjoin')
devtools::install_github('dgrtwo/fuzzyjoin')
devtools::install_github('dgrtwo/fuzzyjoin')
devtools::install_github('dgrtwo/fuzzyjoin')
shiny::runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
View(tps_runs_tbl)
View(lafd_paths_tbl)
View(lafd_paths_tbl)
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp('~/GitHub/Jonathans-Utilities/TPS')
runApp()
runApp('~/GitHub/Jonathans-Utilities/TPS')
View(join_tbl)
